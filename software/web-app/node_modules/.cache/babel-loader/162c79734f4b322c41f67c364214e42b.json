{"ast":null,"code":"var net = require('net');\n\nvar HOST = 'localhost';\nvar PORT = 5000;\nvar buf1 = Buffer.alloc(100);\nnet.createServer(function (sock) {\n  console.log('CONNECTED: ' + sock.remoteAddress + ':' + sock.remotePort);\n  sock.on('data', function (data) {\n    buf1.write(data.toString());\n    console.log(\"Client says: \" + buf1.toString());\n    sock.write('You said \"' + data + '\"');\n  });\n  sock.on('close', function (data) {\n    console.log('CLOSED: ' + sock.remoteAddress + ':' + sock.remotePort);\n  });\n}).listen(PORT, HOST);\nconsole.log('Server listening on ' + HOST + ':' + PORT);","map":{"version":3,"sources":["C:\\Users\\tuamy\\Documents\\School\\Guardian\\src\\server.js"],"names":["net","require","HOST","PORT","buf1","Buffer","alloc","createServer","sock","console","log","remoteAddress","remotePort","on","data","write","toString","listen"],"mappings":"AAAA,IAAIA,GAAG,GAAGC,OAAO,CAAC,KAAD,CAAjB;;AACA,IAAIC,IAAI,GAAG,WAAX;AACA,IAAIC,IAAI,GAAG,IAAX;AAEA,IAAMC,IAAI,GAAGC,MAAM,CAACC,KAAP,CAAa,GAAb,CAAb;AAEAN,GAAG,CAACO,YAAJ,CAAiB,UAASC,IAAT,EAAe;AAE9BC,EAAAA,OAAO,CAACC,GAAR,CAAY,gBAAgBF,IAAI,CAACG,aAArB,GAAqC,GAArC,GAA2CH,IAAI,CAACI,UAA5D;AACAJ,EAAAA,IAAI,CAACK,EAAL,CAAQ,MAAR,EAAgB,UAASC,IAAT,EAAe;AAC7BV,IAAAA,IAAI,CAACW,KAAL,CAAWD,IAAI,CAACE,QAAL,EAAX;AACAP,IAAAA,OAAO,CAACC,GAAR,CAAY,kBAAkBN,IAAI,CAACY,QAAL,EAA9B;AACAR,IAAAA,IAAI,CAACO,KAAL,CAAW,eAAeD,IAAf,GAAsB,GAAjC;AACD,GAJD;AAMAN,EAAAA,IAAI,CAACK,EAAL,CAAQ,OAAR,EAAiB,UAAUC,IAAV,EAAgB;AAE/BL,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAaF,IAAI,CAACG,aAAlB,GAAkC,GAAlC,GAAwCH,IAAI,CAACI,UAAzD;AAED,GAJD;AAMD,CAfD,EAeGK,MAfH,CAeUd,IAfV,EAegBD,IAfhB;AAiBAO,OAAO,CAACC,GAAR,CAAY,yBAAyBR,IAAzB,GAAgC,GAAhC,GAAsCC,IAAlD","sourcesContent":["var net = require('net');\r\nvar HOST = 'localhost';\r\nvar PORT = 5000;\r\n\r\nconst buf1 = Buffer.alloc(100);\r\n\r\nnet.createServer(function(sock) {\r\n\r\n  console.log('CONNECTED: ' + sock.remoteAddress + ':' + sock.remotePort);\r\n  sock.on('data', function(data) {\r\n    buf1.write(data.toString());\r\n    console.log(\"Client says: \" + buf1.toString());\r\n    sock.write('You said \"' + data + '\"');\r\n  });\r\n\r\n  sock.on('close', function (data) {\r\n\r\n    console.log('CLOSED: ' + sock.remoteAddress + ':' + sock.remotePort);\r\n\r\n  });\r\n\r\n}).listen(PORT, HOST);\r\n\r\nconsole.log('Server listening on ' + HOST + ':' + PORT);"]},"metadata":{},"sourceType":"module"}