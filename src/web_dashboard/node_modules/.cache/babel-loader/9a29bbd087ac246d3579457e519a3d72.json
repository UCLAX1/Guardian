{"ast":null,"code":"var net = require('net');\n\nvar HOST = 'localhost';\nvar PORT = 5000;\nexports = '';\nnet.createServer(function (sock) {\n  console.log('CONNECTED: ' + sock.remoteAddress + ':' + sock.remotePort);\n  sock.on('data', function (data) {\n    exports = data.toString(); //buf1.write(data.toString());\n\n    console.log(exports);\n    sock.write('You said \"' + data + '\"');\n  });\n  sock.on('close', function (data) {\n    console.log('CLOSED: ' + sock.remoteAddress + ':' + sock.remotePort);\n  });\n}).listen(PORT, HOST);\nconsole.log('Server listening on ' + HOST + ':' + PORT);","map":{"version":3,"sources":["C:\\Users\\tuamy\\Documents\\School\\Guardian\\src\\server.js"],"names":["net","require","HOST","PORT","exports","createServer","sock","console","log","remoteAddress","remotePort","on","data","toString","write","listen"],"mappings":"AAAA,IAAIA,GAAG,GAAGC,OAAO,CAAC,KAAD,CAAjB;;AACA,IAAIC,IAAI,GAAG,WAAX;AACA,IAAIC,IAAI,GAAG,IAAX;AAEAC,OAAO,GAAG,EAAV;AAEAJ,GAAG,CAACK,YAAJ,CAAiB,UAASC,IAAT,EAAe;AAE9BC,EAAAA,OAAO,CAACC,GAAR,CAAY,gBAAgBF,IAAI,CAACG,aAArB,GAAqC,GAArC,GAA2CH,IAAI,CAACI,UAA5D;AACAJ,EAAAA,IAAI,CAACK,EAAL,CAAQ,MAAR,EAAgB,UAASC,IAAT,EAAe;AAC7BR,IAAAA,OAAO,GAAGQ,IAAI,CAACC,QAAL,EAAV,CAD6B,CAE7B;;AACAN,IAAAA,OAAO,CAACC,GAAR,CAAYJ,OAAZ;AACAE,IAAAA,IAAI,CAACQ,KAAL,CAAW,eAAeF,IAAf,GAAsB,GAAjC;AACD,GALD;AAOAN,EAAAA,IAAI,CAACK,EAAL,CAAQ,OAAR,EAAiB,UAAUC,IAAV,EAAgB;AAE/BL,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAaF,IAAI,CAACG,aAAlB,GAAkC,GAAlC,GAAwCH,IAAI,CAACI,UAAzD;AAED,GAJD;AAMD,CAhBD,EAgBGK,MAhBH,CAgBUZ,IAhBV,EAgBgBD,IAhBhB;AAkBAK,OAAO,CAACC,GAAR,CAAY,yBAAyBN,IAAzB,GAAgC,GAAhC,GAAsCC,IAAlD","sourcesContent":["var net = require('net');\r\nvar HOST = 'localhost';\r\nvar PORT = 5000;\r\n\r\nexports = '';\r\n\r\nnet.createServer(function(sock) {\r\n\r\n  console.log('CONNECTED: ' + sock.remoteAddress + ':' + sock.remotePort);\r\n  sock.on('data', function(data) {\r\n    exports = data.toString();\r\n    //buf1.write(data.toString());\r\n    console.log(exports);\r\n    sock.write('You said \"' + data + '\"');\r\n  });\r\n\r\n  sock.on('close', function (data) {\r\n\r\n    console.log('CLOSED: ' + sock.remoteAddress + ':' + sock.remotePort);\r\n\r\n  });\r\n\r\n}).listen(PORT, HOST);\r\n\r\nconsole.log('Server listening on ' + HOST + ':' + PORT);"]},"metadata":{},"sourceType":"module"}