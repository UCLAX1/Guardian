{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\tuamy\\\\Documents\\\\School\\\\Guardian\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\tuamy\\\\Documents\\\\School\\\\Guardian\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\tuamy\\\\Documents\\\\School\\\\Guardian\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\tuamy\\\\Documents\\\\School\\\\Guardian\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\tuamy\\\\Documents\\\\School\\\\Guardian\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\tuamy\\\\Documents\\\\School\\\\Guardian\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport Navbar from './components/layout/navbar';\nimport Dashboard from './components/dashboard/Dashboard';\nimport SignIn from './components/auth/SignIn';\nimport Camera from './components/projects/camera';\nimport { signOut } from './store/authActions';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.net = require('net');\n    _this.HOST = 'localhost';\n    _this.PORT = 5000;\n    _this.client = new net.Socket();\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      client.connect(PORT, HOST, function () {\n        console.log('Client connected to: ' + HOST + ':' + PORT); // Write a message to the socket as soon as the client is connected, the server will receive it as message from the client \n\n        client.write('Hello World!');\n      });\n      client.on('data', function (data) {\n        console.log('Client received: ' + data);\n      }); // Add a 'close' event handler for the client socket\n\n      client.on('close', function () {\n        console.log('Client closed');\n      });\n      client.on('error', function (err) {\n        console.error(err);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(BrowserRouter, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(Navbar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }), React.createElement(Switch, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(Route, {\n        exact: true,\n        path: \"/\",\n        component: SignIn,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/signin\",\n        component: SignIn,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/camera\",\n        component: Camera,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["C:\\Users\\tuamy\\Documents\\School\\Guardian\\src\\App.js"],"names":["React","Component","BrowserRouter","Switch","Route","Navbar","Dashboard","SignIn","Camera","signOut","App","props","net","require","HOST","PORT","client","Socket","connect","console","log","write","on","data","err","error"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAAQC,aAAR,EAAsBC,MAAtB,EAA6BC,KAA7B,QAAyC,kBAAzC;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,SAAP,MAAsB,kCAAtB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,MAAP,MAAmB,8BAAnB;AACA,SAASC,OAAT,QAAwB,qBAAxB;;IAGMC,G;;;;;AACJ,eAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,6EAAMA,KAAN;AACA,UAAKC,GAAL,GAAWC,OAAO,CAAC,KAAD,CAAlB;AACA,UAAKC,IAAL,GAAY,WAAZ;AACA,UAAKC,IAAL,GAAY,IAAZ;AAEA,UAAKC,MAAL,GAAc,IAAIJ,GAAG,CAACK,MAAR,EAAd;AANiB;AAOlB;;;;wCAEmB;AAElBD,MAAAA,MAAM,CAACE,OAAP,CAAeH,IAAf,EAAqBD,IAArB,EAA2B,YAAW;AACpCK,QAAAA,OAAO,CAACC,GAAR,CAAY,0BAA0BN,IAA1B,GAAiC,GAAjC,GAAuCC,IAAnD,EADoC,CAEpC;;AACAC,QAAAA,MAAM,CAACK,KAAP,CAAa,cAAb;AAED,OALD;AAOAL,MAAAA,MAAM,CAACM,EAAP,CAAU,MAAV,EAAkB,UAASC,IAAT,EAAe;AAC7BJ,QAAAA,OAAO,CAACC,GAAR,CAAY,sBAAsBG,IAAlC;AACH,OAFD,EATkB,CAalB;;AACAP,MAAAA,MAAM,CAACM,EAAP,CAAU,OAAV,EAAmB,YAAW;AAC1BH,QAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACH,OAFD;AAIAJ,MAAAA,MAAM,CAACM,EAAP,CAAU,OAAV,EAAmB,UAASE,GAAT,EAAc;AAC7BL,QAAAA,OAAO,CAACM,KAAR,CAAcD,GAAd;AACH,OAFD;AAGD;;;6BAEQ;AACP,aACE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAGE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AAAa,QAAA,IAAI,EAAC,GAAlB;AAAsB,QAAA,SAAS,EAAEjB,MAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAC,SAAZ;AAAsB,QAAA,SAAS,EAAEA,MAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,EAGE,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAC,SAAZ;AAAsB,QAAA,SAAS,EAAEC,MAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHF,CAHF,CADF,CADF;AAaD;;;;EA/CeP,S;;AAkDlB,eAAeS,GAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport {BrowserRouter,Switch,Route} from 'react-router-dom'\r\nimport Navbar from './components/layout/navbar'\r\nimport Dashboard from './components/dashboard/Dashboard'\r\nimport SignIn from './components/auth/SignIn'\r\nimport Camera from './components/projects/camera'\r\nimport { signOut } from './store/authActions';\r\n\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.net = require('net');\r\n    this.HOST = 'localhost';\r\n    this.PORT = 5000;\r\n  \r\n    this.client = new net.Socket();\r\n  }\r\n\r\n  componentDidMount() {\r\n\r\n    client.connect(PORT, HOST, function() {\r\n      console.log('Client connected to: ' + HOST + ':' + PORT);\r\n      // Write a message to the socket as soon as the client is connected, the server will receive it as message from the client \r\n      client.write('Hello World!');\r\n  \r\n    });\r\n    \r\n    client.on('data', function(data) {    \r\n        console.log('Client received: ' + data);\r\n    });\r\n    \r\n    // Add a 'close' event handler for the client socket\r\n    client.on('close', function() {\r\n        console.log('Client closed');\r\n    });\r\n    \r\n    client.on('error', function(err) {\r\n        console.error(err);\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <BrowserRouter>\r\n        <div className=\"App\">\r\n          <Navbar />\r\n          \r\n          <Switch>\r\n            <Route exact path='/' component={SignIn} />\r\n            <Route path='/signin' component={SignIn} />\r\n            <Route path='/camera' component={Camera} />\r\n          </Switch>\r\n        </div>\r\n      </BrowserRouter>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;"]},"metadata":{},"sourceType":"module"}